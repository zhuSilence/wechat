<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coocaa.mapper.OrderDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.coocaa.po.OrderDetails" >
    <id column="order_details_id" property="orderDetailsId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="buy_numbers" property="buyNumbers" jdbcType="INTEGER" />
    <result column="buy_price" property="buyPrice" jdbcType="REAL" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_details_id, goods_id, buy_numbers, buy_price, order_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from order_details
    where order_details_id = #{orderDetailsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_details
    where order_details_id = #{orderDetailsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.coocaa.po.OrderDetails" >
    insert into order_details (order_details_id, goods_id, buy_numbers,
    buy_price, order_id)
    values (#{orderDetailsId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{buyNumbers,jdbcType=INTEGER},
    #{buyPrice,jdbcType=REAL}, #{orderId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.coocaa.po.OrderDetails" >
    insert into order_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderDetailsId != null" >
        order_details_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="buyNumbers != null" >
        buy_numbers,
      </if>
      <if test="buyPrice != null" >
        buy_price,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderDetailsId != null" >
        #{orderDetailsId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="buyNumbers != null" >
        #{buyNumbers,jdbcType=INTEGER},
      </if>
      <if test="buyPrice != null" >
        #{buyPrice,jdbcType=REAL},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.coocaa.po.OrderDetails" >
    update order_details
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="buyNumbers != null" >
        buy_numbers = #{buyNumbers,jdbcType=INTEGER},
      </if>
      <if test="buyPrice != null" >
        buy_price = #{buyPrice,jdbcType=REAL},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
    </set>
    where order_details_id = #{orderDetailsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coocaa.po.OrderDetails" >
    update order_details
    set goods_id = #{goodsId,jdbcType=INTEGER},
      buy_numbers = #{buyNumbers,jdbcType=INTEGER},
      buy_price = #{buyPrice,jdbcType=REAL},
      order_id = #{orderId,jdbcType=INTEGER}
    where order_details_id = #{orderDetailsId,jdbcType=INTEGER}
  </update>
</mapper>